Udp 
Server

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define PORT 8080

int main() {
	int sock;
	struct sockaddr_in server_addr, client_addr;
	char buffer[1024];
	socklen_t addr_len = sizeof(client_addr);

	sock = socket(AF_INET, SOCK_DGRAM, 0);
	server_addr.sin_family = AF_INET;
	server_addr.sin_addr.s_addr = INADDR_ANY;
	server_addr.sin_port = htons(PORT);
	bind(sock, (struct sockaddr*)&server_addr, sizeof(server_addr));

	printf("UDP server listening on port %d\n", PORT);
	recvfrom(sock, buffer, sizeof(buffer), 0, (struct sockaddr*)&client_addr, &addr_len);
	printf("Client: %s\n", buffer);
	sendto(sock, "Hello from server", 17, 0, (struct sockaddr*)&client_addr, addr_len);

	close(sock);
	return 0;
}


Client
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define PORT 8080

int main() {
	int sock;
	struct sockaddr_in server_addr;
	char *message = "Hello from client";

	sock = socket(AF_INET, SOCK_DGRAM, 0);
	server_addr.sin_family = AF_INET;
	server_addr.sin_port = htons(PORT);
	inet_pton(AF_INET, "127.0.0.1", &server_addr.sin_addr);

	sendto(sock, message, strlen(message), 0, (struct sockaddr*)&server_addr, sizeof(server_addr));

	char buffer[1024] = {0};
	socklen_t addr_len = sizeof(server_addr);
	recvfrom(sock, buffer, sizeof(buffer), 0, (struct sockaddr*)&server_addr, &addr_len);
	printf("Server: %s\n", buffer);

	close(sock);
	return 0;
}

Tcp
Server
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define PORT 8080

int main() {
	int server_fd, new_socket;
	struct sockaddr_in address;
	char buffer[1024] = {0};

	server_fd = socket(AF_INET, SOCK_STREAM, 0);
	address.sin_family = AF_INET;
	address.sin_addr.s_addr = INADDR_ANY;
	address.sin_port = htons(PORT);

	bind(server_fd, (struct sockaddr*)&address, sizeof(address));
	listen(server_fd, 1);
	printf("Server listening on port %d\n", PORT);

	new_socket = accept(server_fd, NULL, NULL);
	read(new_socket, buffer, sizeof(buffer));
	printf("Client: %s\n", buffer);
	send(new_socket, "Hello from server", 17, 0);

	close(new_socket);
	close(server_fd);
	return 0;
}
client
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define PORT 8080

int main() {
	int sock;
	struct sockaddr_in serv_addr;
	char *message = "Hello from client";

	sock = socket(AF_INET, SOCK_STREAM, 0);
	serv_addr.sin_family = AF_INET;
	serv_addr.sin_port = htons(PORT);
	inet_pton(AF_INET, "127.0.0.1", &serv_addr.sin_addr);

	connect(sock, (struct sockaddr*)&serv_addr, sizeof(serv_addr));
	send(sock, message, strlen(message), 0);

	char buffer[1024] = {0};
	read(sock, buffer, sizeof(buffer));
	printf("Server: %s\n", buffer);

	close(sock);
	return 0;
}


gcc server.c -o server.c
./server.c